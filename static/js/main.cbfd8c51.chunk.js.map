{"version":3,"sources":["constants.js","Button.js","Menu.js","index.js"],"names":["RADIUS","CONTAINER_SIZE","buttonHover","css","_templateObject","Object","taggedTemplateLiteral","ButtonBase","styled","button","_templateObject2","p","isOpen","Button","React","_ref","ref","style","className","onClick","react","Add_esm","size","TooltipBox","motion","div","Menu_templateObject","Circle","Menu_templateObject2","MenuItem","Icon","label","index","totalItems","_useHover","useHover","delayEnter","delayLeave","_useHover2","slicedToArray","bind","index_es","ResizeObserver","fixed","placement","anchor","autoAdjust","scrollOffset","triggerOffset","renderLayer","_ref2","layerProps","framer_motion_es","assign","initial","opacity","animate","exit","_ref3","triggerRef","x","transformTemplate","_ref4","progress","radius","value","Math","cos","PI","y","sin","scale","concat","getTransform","parseFloat","replace","transition","delay","type","stiffness","damping","mass","MenuBase","_templateObject3","Menu","_ref5","close","items","map","item","key","console","log","length","Example","react_default","a","createElement","src_Menu","Image","Video","Music","File","Location","Code","toggle","src_Button","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cbfd8c51.chunk.js","sourcesContent":["export const BUTTON_SIZE = 56;\nexport const ITEM_SIZE = 36;\nexport const CONTAINER_SIZE = 120;\nexport const RADIUS = CONTAINER_SIZE / 2;\n\nexport const PRIMARY = \"#2ea09b\";\nexport const PRIMARY_2 = \"#268e89\";\nexport const BORDER = \"#dadada\";\nexport const TEXT = \"#656565\";\n","import * as React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { PRIMARY, PRIMARY_2, BUTTON_SIZE } from \"./constants\";\nimport { Add } from \"styled-icons/material/Add\";\n\nconst buttonHover = css`\n  &:hover {\n    background-color: ${PRIMARY_2};\n    transform: scale(1.03);\n  }\n`;\n\nconst ButtonBase = styled.button`\n  width: ${BUTTON_SIZE}px;\n  height: ${BUTTON_SIZE}px;\n  color: white;\n  border: none;\n  background-color: ${p => (p.isOpen ? PRIMARY_2 : PRIMARY)};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: 0;\n  cursor: pointer;\n  transition: 0.2s ease-in-out;\n  transform: scale(${p => (p.isOpen ? 1.03 : 1)});\n\n  ${p => !p.isOpen && buttonHover}\n\n  & svg {\n    transition: 0.25s ease-in-out;\n    transform: rotate(${p => (p.isOpen ? 45 : 0)}deg);\n  }\n`;\n\nconst Button = React.forwardRef(function Button(\n  { style, className, isOpen, onClick },\n  ref\n) {\n  return (\n    <ButtonBase\n      ref={ref}\n      style={style}\n      className={className}\n      isOpen={isOpen}\n      onClick={onClick}\n    >\n      <Add size={28} />\n    </ButtonBase>\n  );\n});\n\nexport default Button;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport {\n  ITEM_SIZE,\n  RADIUS,\n  BORDER,\n  TEXT,\n  PRIMARY,\n  CONTAINER_SIZE\n} from \"./constants\";\nimport { ToggleLayer, useHover } from \"react-laag\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n/**\n * Positioning Stuff\n */\n\nfunction getTransform(progress, radius, index, totalItems) {\n  const value = (index / totalItems) * progress;\n\n  const x = radius * Math.cos(Math.PI * 2 * (value - 0.25));\n  const y = radius * Math.sin(Math.PI * 2 * (value - 0.25));\n\n  const scale = progress / 2 + 0.5;\n\n  return `translate(${x}px, ${y}px) scale(${scale})`;\n}\n\n/**\n * MenuItem\n */\n\nconst TooltipBox = styled(motion.div)`\n  background-color: #333;\n  color: white;\n  font-size: 12px;\n  padding: 4px 8px;\n  line-height: 1.15;\n  border-radius: 3px;\n`;\n\nconst Circle = styled(motion.div)`\n  position: absolute;\n  width: ${ITEM_SIZE}px;\n  height: ${ITEM_SIZE}px;\n  background-color: white;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid ${BORDER};\n  box-shadow: 1px 1px 6px 0px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: box-shadow 0.15s ease-in-out, border 0.15s ease-in-out;\n  color: ${TEXT};\n  pointer-events: all;\n  will-change: transform;\n\n  & svg {\n    transition: 0.15s ease-in-out;\n  }\n\n  &:hover {\n    box-shadow: 1px 1px 10px 0px rgba(0, 0, 0, 0.15);\n    color: ${PRIMARY};\n\n    & svg {\n      transform: scale(1.15);\n    }\n  }\n`;\n\nfunction MenuItem({\n  style,\n  className,\n  Icon,\n  onClick,\n  label,\n  index,\n  totalItems\n}) {\n  const [isOpen, bind] = useHover({ delayEnter: 300, delayLeave: 100 });\n\n  return (\n    <ToggleLayer\n      ResizeObserver={ResizeObserver}\n      isOpen={isOpen}\n      fixed\n      placement={{\n        anchor: \"TOP_CENTER\",\n        autoAdjust: true,\n        scrollOffset: 16,\n        triggerOffset: 6\n      }}\n      renderLayer={({ isOpen, layerProps }) => {\n        return (\n          <AnimatePresence>\n            {isOpen && (\n              <TooltipBox\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                {...layerProps}\n              >\n                {label}\n              </TooltipBox>\n            )}\n          </AnimatePresence>\n        );\n      }}\n    >\n      {({ triggerRef }) => (\n        <Circle\n          ref={triggerRef}\n          className={className}\n          style={style}\n          onClick={onClick}\n          {...bind}\n          initial={{ x: 0, opacity: 0 }}\n          animate={{ x: 1, opacity: 1 }}\n          exit={{ x: 0, opacity: 0 }}\n          transformTemplate={({ x }) => {\n            const value = parseFloat(x.replace(\"px\", \"\"));\n            return getTransform(value, RADIUS, index, totalItems);\n          }}\n          transition={{\n            delay: index * 0.025,\n            type: \"spring\",\n            stiffness: 600,\n            damping: 50,\n            mass: 1\n          }}\n        >\n          {React.createElement(Icon, { size: 20 })}\n        </Circle>\n      )}\n    </ToggleLayer>\n  );\n}\n\n/**\n * Menu\n */\n\nconst MenuBase = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${CONTAINER_SIZE}px;\n  height: ${CONTAINER_SIZE}px;\n  pointer-events: none;\n  border-radius: 50%;\n`;\n\nconst Menu = React.forwardRef(function Menu({ style, close, items }, ref) {\n  return (\n    <MenuBase ref={ref} style={style} onClick={close}>\n      {items.map((item, index) => (\n        <MenuItem\n          key={index}\n          Icon={item.Icon}\n          label={item.label}\n          onClick={() => console.log(item.value)}\n          index={index}\n          totalItems={items.length}\n        />\n      ))}\n    </MenuBase>\n  );\n});\n\nexport default Menu;\n","import \"./styles.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { ToggleLayer } from \"react-laag\";\n\n/**\n * Icons\n */\n\nimport { Image } from \"styled-icons/boxicons-regular/Image\";\nimport { PlayCircle as Video } from \"styled-icons/boxicons-regular/PlayCircle\";\nimport { Music } from \"styled-icons/boxicons-solid/Music\";\nimport { File } from \"styled-icons/boxicons-regular/File\";\nimport { LocationOn as Location } from \"styled-icons/material/LocationOn\";\nimport { Code } from \"styled-icons/boxicons-regular/Code\";\n\n/**\n * Components\n */\n\nimport Button from \"./Button\";\nimport Menu from \"./Menu\";\n\n/**\n * Main\n */\n\nfunction Example() {\n  return (\n    <div>\n      <ToggleLayer\n        ResizeObserver={ResizeObserver}\n        placement={{\n          anchor: \"CENTER\"\n        }}\n        renderLayer={({ isOpen, layerProps, close }) => {\n          return (\n            <AnimatePresence>\n              {isOpen && (\n                <Menu\n                  {...layerProps}\n                  close={close}\n                  items={[\n                    { Icon: Image, value: \"image\", label: \"Image\" },\n                    { Icon: Video, value: \"video\", label: \"Video\" },\n                    { Icon: Music, value: \"music\", label: \"Music\" },\n                    { Icon: File, value: \"file\", label: \"File\" },\n                    { Icon: Location, value: \"location\", label: \"Location\" },\n                    { Icon: Code, value: \"code\", label: \"Code\" }\n                  ]}\n                />\n              )}\n            </AnimatePresence>\n          );\n        }}\n      >\n        {({ triggerRef, toggle, isOpen }) => (\n          <Button ref={triggerRef} onClick={toggle} isOpen={isOpen} />\n        )}\n      </ToggleLayer>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Example />, rootElement);\n"],"sourceRoot":""}